name: Build Odigos Images

on:
  workflow_call:
    inputs:
      tag:
        description: 'The image tag to build'
        required: true
        type: string
      push:
        required: false
        default: false
        type: boolean
      save:
        description: 'Optionaly save the images to odigos-images.tar to be used in a future job'
        required: false
        default: false
        type: boolean
      runner:
        description: 'The runner to use for the job'
        required: false
        default: 'ubuntu-latest'
        type: string

jobs:
    build-images:
      strategy:
        matrix:
          include:
            - service: autoscaler
            - service: scheduler
            - service: instrumentor
            - service: collector
            - service: odiglet
            - service: ui
      runs-on: ${{ inputs.runner }}
      steps:
          - name: Print Inputs
            run: |
              echo "Tag: ${{ inputs.tag }}"
              echo "Push: ${{ inputs.push }}"
              echo "Save: ${{ inputs.save }}"
          - name: Checkout
            uses: actions/checkout@v4
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3
          - name: Build and Push Docker Image for ${{ matrix.service }}
            uses: docker/build-push-action@v6
            with:
              push: ${{ inputs.push == 'true' }}
              load: ${{ inputs.save == 'true' }}
              tags: keyval/odigos-${{ matrix.service }}:${{ inputs.tag }}
              build-args: |
                  SERVICE_NAME=${{ matrix.service }}
                  ODIGOS_VERSION=${{ inputs.tag }}
              platforms: linux/amd64,linux/arm64
              file: >-
                  ${{
                  (matrix.service == 'odiglet' && 'odiglet/Dockerfile') ||
                  (matrix.service == 'collector' && 'collector/Dockerfile') ||
                  (matrix.service == 'ui' && 'frontend/Dockerfile') ||
                  'Dockerfile'
                  }}
              context: >-
                  ${{
                  (matrix.service == 'collector' && 'collector') ||
                  '.'
                  }}
              cache-from: type=gha
              cache-to: type=gha,mode=max
    save-images:
      needs: 
      - build-images
      runs-on: ubuntu-latest
      if: always() && ${{ inputs.save == 'true' }}
      steps:
        - name: Set up Docker
          uses: docker/setup-buildx-action@v3
  
        - name: Save all Odigos images to tar
          run: |
            images=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep "odigos")
            if [ -n "$images" ]; then
              docker save -o odigos-images.tar $images
            else
              echo "No odigos images found to save."
        
        - name: Upload Odigos Images
          uses: actions/upload-artifact@v3
          with:
            name: odigos-images
            path: odigos-images.tar