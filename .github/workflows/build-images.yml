name: Build Odigos Images

on:
  workflow_call:
    inputs:
      tag:
        description: 'The image tag to build'
        required: true
        type: string
      push:
        required: false
        default: false
        type: boolean
      save:
        description: 'Optionaly save the images to odigos-images.tar to be used in a future job'
        required: false
        default: false
        type: boolean
      runner:
        description: 'The runner to use for the job'
        required: false
        default: 'ubuntu-latest'
        type: string

jobs:
    build-images:
      strategy:
        matrix:
          include:
            - service: autoscaler
            - service: scheduler
            - service: instrumentor
            - service: collector
            - service: odiglet
            - service: ui
      runs-on: ${{ inputs.runner }}
      steps:
          - name: Print Inputs
            run: |
              echo "Tag: ${{ inputs.tag }}"
              echo "Push: ${{ inputs.push }}"
              echo "Save: ${{ inputs.save }}"
          - name: Checkout
            uses: actions/checkout@v4
          - name: Set up QEMU
            uses: docker/setup-qemu-action@v3
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3
          - name: Build and Push Docker Image for ${{ matrix.service }}
            uses: docker/build-push-action@v6
            with:
              push: ${{ inputs.push == 'true' }}
              outputs: type=docker,dest=/tmp/${{ matrix.service }}.tar
              tags: keyval/odigos-${{ matrix.service }}:${{ inputs.tag }}
              build-args: |
                  SERVICE_NAME=${{ matrix.service }}
                  ODIGOS_VERSION=${{ inputs.tag }}
              platforms: linux/amd64,linux/arm64
              file: >-
                  ${{
                  (matrix.service == 'odiglet' && 'odiglet/Dockerfile') ||
                  (matrix.service == 'collector' && 'collector/Dockerfile') ||
                  (matrix.service == 'ui' && 'frontend/Dockerfile') ||
                  'Dockerfile'
                  }}
              context: >-
                  ${{
                  (matrix.service == 'collector' && 'collector') ||
                  '.'
                  }}
              cache-from: type=gha
              cache-to: type=gha,mode=max
          - name: Upload Odigos Images
            if: always() && ${{ inputs.save == 'true' }}
            uses: actions/upload-artifact@v3
            with:
              name: ${{ matrix.service }}
              path: /tmp/${{ matrix.service }}.tar

    combine-images:
      needs: build-images
      runs-on: ubuntu-latest
      if: ${{ inputs.save == 'true' }}
      steps:
        - name: Download All Odigos Image Artifacts
          uses: actions/download-artifact@v3
          with:
            name: "*"
            path: /tmp
        - name: Combine All Images into a Single Tar
          run: |
            cd /tmp
            for file in *.tar; do
              tar -xf "$file"
            done
            tar --exclude="*.tar" -cvf odigos-images.tar .
        - name: Upload Combined Odigos Images Tar
          uses: actions/upload-artifact@v3
          with:
            name: odigos-images
            path: odigos-images.tar