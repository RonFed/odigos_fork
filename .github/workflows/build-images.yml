name: Build Odigos Images

on:
  workflow_call:
    inputs:
      tag:
        description: 'The image tag to build'
        required: true
        type: string
      push:
        required: false
        default: false
        type: boolean
      save:
        description: 'Optionaly save the images to odigos-images.tar to be used in a future job'
        required: false
        default: false
        type: boolean

jobs:
    build-images:
      strategy:
        matrix:
          include:
            - service: autoscaler
            - service: scheduler
            - service: instrumentor
            - service: collector
            - service: odiglet
            - service: ui
      runs-on: warp-ubuntu-latest-x64-8x-spot
      steps:
          - name: Print Inputs
            run: |
              echo "Tag: ${{ inputs.tag }}"
              echo "Push: ${{ inputs.push }}"
              echo "Save: ${{ inputs.save }}"
          - name: Checkout
            uses: actions/checkout@v4
          - name: Set up QEMU
            uses: docker/setup-qemu-action@v3
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3
          - name: Cache Docker Layers
            uses: WarpBuilds/cache@v1
            with:
              path: ${{ matrix.service }}-cache
              key: ${{ matrix.service }}-cache-${{ github.head_ref }}
          - name: Build and Push Docker Image for ${{ matrix.service }}
            uses: docker/build-push-action@v6
            with:
              push: ${{ inputs.push == 'true' }}
              outputs: type=oci,dest=/tmp/${{ matrix.service }}.tar
              tags: keyval/odigos-${{ matrix.service }}:${{ inputs.tag }}
              build-args: |
                  SERVICE_NAME=${{ matrix.service }}
                  ODIGOS_VERSION=${{ inputs.tag }}
              platforms: linux/amd64,linux/arm64
              file: >-
                  ${{
                  (matrix.service == 'odiglet' && 'odiglet/Dockerfile') ||
                  (matrix.service == 'collector' && 'collector/Dockerfile') ||
                  (matrix.service == 'ui' && 'frontend/Dockerfile') ||
                  'Dockerfile'
                  }}
              context: >-
                  ${{
                  (matrix.service == 'collector' && 'collector') ||
                  '.'
                  }}
              cache-to: type=local,mode=max,dest=${{ matrix.service }}-cache
              cache-from: type=local,src=${{ matrix.service }}-cache
          - name: Upload artifact
            if: always() && ${{ inputs.save == 'true' }}
            uses: actions/upload-artifact@v3
            with:
              name: ${{ matrix.service }}
              path: /tmp/${{ matrix.service }}.tar